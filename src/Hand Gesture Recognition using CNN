import cv2
import numpy as np # We'll be storing our data as numpy arrays
import os # For handling directories
from PIL import Image # For handling the images
import matplotlib.pyplot as plt
import matplotlib.image as mpimg # Plotting
import tensorflow as tf


cap = cv2.VideoCapture(0)
if not (cap.isOpened()):
    print("Video device not connected.")
    
    cam = cv2.VideoCapture(0)

cv2.namedWindow("test")

img_counter = 0

while True:
    ret, frame = cam.read()
    if not ret:
        print("failed to grab frame")
        break
    cv2.imshow("test", frame)

    k = cv2.waitKey(1)
    if k%256 == 27:
        # ESC pressed
        print("Escape hit, closing...")
        break
    elif k%256 == 32:
        # SPACE pressed
        img_name = "opencv_frame_{}.png".format(img_counter)
        cv2.imwrite(img_name, frame)
        print("{} written!".format(img_name))
        img_counter += 1

cam.release()

cv2.destroyAllWindows()


cv2_im = cv2.cvtColor(frame,cv2.COLOR_BGR2RGB)


import matplotlib.pyplot as plt
plt.imshow(cv2_im)
plt.show()


new_model = tf.keras.models.load_model('C:/Users/91932/Downloads/my_model.h5')


img = Image.open('opencv_frame_0.png').convert('L')
                                # Read in and convert to greyscale
img = img.resize((320, 120))
arr = np.array(img)


arr = np.array(arr, dtype = 'float32')
arr = arr.reshape((120, 320, 1))
arr /= 255


new_model.predict(arr)
